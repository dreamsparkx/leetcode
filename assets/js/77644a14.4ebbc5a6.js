"use strict";(self.webpackChunkleetcode=self.webpackChunkleetcode||[]).push([[2034],{2732:function(t,e,n){n.r(e),n.d(e,{assets:function(){return c},contentTitle:function(){return u},default:function(){return k},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return m}});var i=n(7462),a=n(3366),o=(n(7294),n(3905)),l=n(5714),r=["components"],s={title:"338. Counting Bits (Easy)",tags:["Dynamic Programming","Bit Manipulation","Easy"]},u=void 0,p={unversionedId:"338",id:"338",title:"338. Counting Bits (Easy)",description:"<SolutionDocHead",source:"@site/solutions/338.mdx",sourceDirName:".",slug:"/338",permalink:"/leetcode/solutions/338",tags:[{label:"Dynamic Programming",permalink:"/leetcode/solutions/tags/dynamic-programming"},{label:"Bit Manipulation",permalink:"/leetcode/solutions/tags/bit-manipulation"},{label:"Easy",permalink:"/leetcode/solutions/tags/easy"}],version:"current",lastUpdatedBy:"Gaurav Bharti",lastUpdatedAt:1651501637,formattedLastUpdatedAt:"5/2/2022",frontMatter:{title:"338. Counting Bits (Easy)",tags:["Dynamic Programming","Bit Manipulation","Easy"]},sidebar:"solutions",previous:{title:"316. Remove Duplicate Letters (Medium)",permalink:"/leetcode/solutions/316"},next:{title:"344. Reverse String (Easy)",permalink:"/leetcode/solutions/344"}},c={},m=[],d={toc:m};function k(t){var e=t.components,n=(0,a.Z)(t,r);return(0,o.kt)("wrapper",(0,i.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)(l.Z,{solutionType:"easy",labels:["Dynamic Programming","Bit Manipulation"],url:"https://leetcode.com/problems/counting-bits/",mdxType:"SolutionDocHead"}),(0,o.kt)("p",null,"Given an integer ",(0,o.kt)("inlineCode",{parentName:"p"},"n"),", return an array ",(0,o.kt)("inlineCode",{parentName:"p"},"ans")," of length ",(0,o.kt)("inlineCode",{parentName:"p"},"n + 1")," such that for each ",(0,o.kt)("inlineCode",{parentName:"p"},"i")," (",(0,o.kt)("inlineCode",{parentName:"p"},"0 <= i <= n"),"), ",(0,o.kt)("inlineCode",{parentName:"p"},"ans[i]")," is the ",(0,o.kt)("b",null,"number")," of 1's in the binary representation of i."),(0,o.kt)("b",null,"Example 1:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Input: n = 2\nOutput: [0,1,1]\nExplanation:\n0 --\x3e 0\n1 --\x3e 1\n2 --\x3e 10\n")),(0,o.kt)("b",null,"Example 2:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Input: n = 5\nOutput: [0,1,1,2,1,2]\nExplanation:\n0 --\x3e 0\n1 --\x3e 1\n2 --\x3e 10\n3 --\x3e 11\n4 --\x3e 100\n5 --\x3e 101\n")),(0,o.kt)("b",null,"Constraints:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"0 <= n <= 10",(0,o.kt)("sup",null,"5"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title=solution.ts",title:"solution.ts"},"function countBits(n: number): number[] {\n  let result = Array(n + 1).fill(0);\n  let offset = 1;\n  for (let i = 1; i < n + 1; i++) {\n    if (offset * 2 === i) {\n      offset = i;\n    }\n    result[i] = 1 + result[i - offset];\n  }\n  return result;\n}\n")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://leetcode.com/problems/counting-bits/discuss/1808435/Python-Javascript-Very-Deep-Explanation"},"https://leetcode.com/problems/counting-bits/discuss/1808435/Python-Javascript-Very-Deep-Explanation")))}k.isMDXComponent=!0}}]);