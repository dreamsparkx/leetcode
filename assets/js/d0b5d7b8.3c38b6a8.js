"use strict";(self.webpackChunkleetcode=self.webpackChunkleetcode||[]).push([[8992],{8490:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return u},default:function(){return b},frontMatter:function(){return r},metadata:function(){return p},toc:function(){return m}});var l=n(7462),i=n(3366),a=(n(7294),n(3905)),s=n(5714),o=["components"],r={title:"202. Happy Number (Easy)",tags:["Hash Table","Math","Two Pointers","Easy","Uber","Twitter","Airbnb"]},u=void 0,p={unversionedId:"202",id:"202",title:"202. Happy Number (Easy)",description:"<SolutionDocHead",source:"@site/solutions/202.mdx",sourceDirName:".",slug:"/202",permalink:"/leetcode/solutions/202",tags:[{label:"Hash Table",permalink:"/leetcode/solutions/tags/hash-table"},{label:"Math",permalink:"/leetcode/solutions/tags/math"},{label:"Two Pointers",permalink:"/leetcode/solutions/tags/two-pointers"},{label:"Easy",permalink:"/leetcode/solutions/tags/easy"},{label:"Uber",permalink:"/leetcode/solutions/tags/uber"},{label:"Twitter",permalink:"/leetcode/solutions/tags/twitter"},{label:"Airbnb",permalink:"/leetcode/solutions/tags/airbnb"}],version:"current",lastUpdatedBy:"Gaurav Bharti",lastUpdatedAt:1651240850,formattedLastUpdatedAt:"4/29/2022",frontMatter:{title:"202. Happy Number (Easy)",tags:["Hash Table","Math","Two Pointers","Easy","Uber","Twitter","Airbnb"]},sidebar:"solutions",previous:{title:"189. Rotate Array (Medium)",permalink:"/leetcode/solutions/189"},next:{title:"206. Reverse Linked List (Easy)",permalink:"/leetcode/solutions/206"}},d={},m=[],c={toc:m};function b(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,l.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)(s.Z,{solutionType:"easy",labels:["Hash Table","Math","Two Pointers"],companies:["Uber","Twitter","Airbnb"],url:"https://leetcode.com/problems/happy-number/",mdxType:"SolutionDocHead"}),(0,a.kt)("p",null,"Write an algorithm to determine if a number ",(0,a.kt)("inlineCode",{parentName:"p"},"n")," is happy."),(0,a.kt)("p",null,"A ",(0,a.kt)("b",null,"happy number")," is a number defined by the following process:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Starting with any positive integer, replace the number by the sum of the squares of its digits."),(0,a.kt)("li",{parentName:"ul"},"Repeat the process until the number equals 1 (where it will stay), or it ",(0,a.kt)("b",null,"loops endlessly in a cycle")," which does not include 1."),(0,a.kt)("li",{parentName:"ul"},"Those numbers for which this process ",(0,a.kt)("b",null,"ends in 1")," are happy.")),(0,a.kt)("p",null,"Return ",(0,a.kt)("inlineCode",{parentName:"p"},"true")," if ",(0,a.kt)("inlineCode",{parentName:"p"},"n")," is a happy number, and ",(0,a.kt)("inlineCode",{parentName:"p"},"false")," if not."),(0,a.kt)("b",null,"Example 1:"),(0,a.kt)("br",null),(0,a.kt)("code",null,"Input: n = 19",(0,a.kt)("p",null,"Output: true\nExplanation:\n1",(0,a.kt)("sup",null,"2")," + 9",(0,a.kt)("sup",null,"2")," = 82\n8",(0,a.kt)("sup",null,"2")," + 2",(0,a.kt)("sup",null,"2")," = 68\n6",(0,a.kt)("sup",null,"2")," + 8",(0,a.kt)("sup",null,"2")," = 100\n1",(0,a.kt)("sup",null,"2")," + 0",(0,a.kt)("sup",null,"2")," + 0",(0,a.kt)("sup",null,"2")," = 1")),(0,a.kt)("b",null,"Example 2:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Input: n = 2\nOutput: false\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title=solution.ts",title:"solution.ts"},"function getDigits(num) {\n  const digits = [];\n  while (num > 0) {\n    digits.push(num % 10);\n    num = Math.floor(num / 10);\n  }\n  return digits;\n}\n\nfunction getSquaredTotal(digits: number[]) {\n  return digits.reduce((total, digit) => total + digit * digit, 0);\n}\n\nfunction isHappy(n: number): boolean {\n  const seen = new Set();\n  while (n !== 1) {\n    let digits = getDigits(n);\n    n = getSquaredTotal(digits);\n    if (seen.has(n)) {\n      return false;\n    }\n    seen.add(n);\n  }\n  return true;\n}\n")))}b.isMDXComponent=!0}}]);