"use strict";(self.webpackChunkleetcode=self.webpackChunkleetcode||[]).push([[9210],{6529:function(e,t,n){var r=n(7294),l=n(1285),a=(0,n(1120).Z)((function(e){return{root:{display:"flex",flexWrap:"wrap","& > *":{margin:e.spacing(.5)}}}}));t.Z=function(e){var t=a(),n=e.labels;return r.createElement("div",{className:t.root},n.map((function(e,t){return r.createElement(l.Z,{label:e,key:t+"-"+e})})))}},5714:function(e,t,n){n.d(t,{Z:function(){return o}});var r=n(7294),l={medium:"medium_AtL5",easy:"easy_Arst",hard:"hard_vnPO"},a=function(e){var t=e.type,n="";switch(t){case"medium":n="Medium";break;case"hard":n="Hard";break;default:n="Easy"}return r.createElement("span",{className:l[t]},n)},u=n(6529),o=function(e){var t=e.solutionType,n=e.labels,l=e.companies,o=e.url;return r.createElement(r.Fragment,null,r.createElement(a,{type:t}),r.createElement("br",null),r.createElement("br",null),r.createElement(u.Z,{labels:n}),r.createElement("br",null),l&&l.length>0&&r.createElement(r.Fragment,null,"Companies:",r.createElement(u.Z,{labels:l}),r.createElement("br",null)),"URL: ",r.createElement("a",{href:o,target:"_blank",rel:"noopener noreferrer"},o),r.createElement("br",null),r.createElement("br",null))}},4398:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return k},frontMatter:function(){return i},metadata:function(){return m},toc:function(){return c}});var r=n(7462),l=n(3366),a=(n(7294),n(3905)),u=n(5714),o=["components"],i={title:"347. Top K Frequent Elements (Medium)",tags:["Array","Hash Table","Divide and Conquer","Sorting","Heap (Priority Queue)","Bucket Sort","Counting","Quickselect","Medium","Yelp"]},s=void 0,m={unversionedId:"347",id:"347",title:"347. Top K Frequent Elements (Medium)",description:"<SolutionDocHead",source:"@site/solutions/347.mdx",sourceDirName:".",slug:"/347",permalink:"/leetcode/solutions/347",tags:[{label:"Array",permalink:"/leetcode/solutions/tags/array"},{label:"Hash Table",permalink:"/leetcode/solutions/tags/hash-table"},{label:"Divide and Conquer",permalink:"/leetcode/solutions/tags/divide-and-conquer"},{label:"Sorting",permalink:"/leetcode/solutions/tags/sorting"},{label:"Heap (Priority Queue)",permalink:"/leetcode/solutions/tags/heap-priority-queue"},{label:"Bucket Sort",permalink:"/leetcode/solutions/tags/bucket-sort"},{label:"Counting",permalink:"/leetcode/solutions/tags/counting"},{label:"Quickselect",permalink:"/leetcode/solutions/tags/quickselect"},{label:"Medium",permalink:"/leetcode/solutions/tags/medium"},{label:"Yelp",permalink:"/leetcode/solutions/tags/yelp"}],version:"current",lastUpdatedBy:"Gaurav Bharti",lastUpdatedAt:1651324949,formattedLastUpdatedAt:"4/30/2022",frontMatter:{title:"347. Top K Frequent Elements (Medium)",tags:["Array","Hash Table","Divide and Conquer","Sorting","Heap (Priority Queue)","Bucket Sort","Counting","Quickselect","Medium","Yelp"]},sidebar:"solutions",previous:{title:"345. Reverse Vowels of a String (Easy)",permalink:"/leetcode/solutions/345"},next:{title:"374. Guess Number Higher or Lower (Easy)",permalink:"/leetcode/solutions/374"}},p={},c=[],d={toc:c};function k(e){var t=e.components,n=(0,l.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)(u.Z,{solutionType:"medium",labels:["Array","Hash Table","Divide and Conquer","Sorting","Heap (Priority Queue)","Bucket Sort","Counting","Quickselect"],companies:["Yelp"],url:"https://leetcode.com/problems/top-k-frequent-elements/",mdxType:"SolutionDocHead"}),(0,a.kt)("p",null,"Given an integer array ",(0,a.kt)("inlineCode",{parentName:"p"},"nums")," and an integer ",(0,a.kt)("inlineCode",{parentName:"p"},"k"),", return the ",(0,a.kt)("inlineCode",{parentName:"p"},"k")," most frequent elements. You may return the answer in ",(0,a.kt)("b",null,"any order"),"."),(0,a.kt)("b",null,"Example 1:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Input: nums = [1,1,1,2,2,3], k = 2\nOutput: [1,2]\n")),(0,a.kt)("b",null,"Example 2:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Input: nums = [1], k = 1\nOutput: [1]\n")),(0,a.kt)("b",null,"Constraints:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"1 <= nums.length <= 10",(0,a.kt)("sup",null,"5")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"k")," is in the range ",(0,a.kt)("inlineCode",{parentName:"li"},"[1, the number of unique elements in the array]"),"."),(0,a.kt)("li",{parentName:"ul"},"It is ",(0,a.kt)("b",null,"guaranteed")," that the answer is ",(0,a.kt)("b",null,"unique"),".")),(0,a.kt)("p",null,"Follow up: Your algorithm's time complexity must be better than ",(0,a.kt)("inlineCode",{parentName:"p"},"O(n log n)"),", where n is the array's size."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title=solution.ts",title:"solution.ts"},"function topKFrequent(nums: number[], k: number): number[] {\n  const freqMap = new Map();\n  const result = [];\n  nums.forEach((n) => freqMap.set(n, (freqMap.get(n) || 0) + 1));\n  const sortedArray = [...freqMap.entries()].sort((a, b) => b[1] - a[1]);\n  for (let i = 0; i < k; i++) {\n    result.push(sortedArray[i][0]);\n  }\n  return result;\n}\n")))}k.isMDXComponent=!0}}]);