"use strict";(self.webpackChunkleetcode=self.webpackChunkleetcode||[]).push([[8745],{6529:function(e,t,n){var r=n(7294),a=n(1285),l=(0,n(1120).Z)((function(e){return{root:{display:"flex",flexWrap:"wrap","& > *":{margin:e.spacing(.5)}}}}));t.Z=function(e){var t=l(),n=e.labels;return r.createElement("div",{className:t.root},n.map((function(e,t){return r.createElement(a.Z,{label:e,key:t+"-"+e})})))}},5714:function(e,t,n){n.d(t,{Z:function(){return u}});var r=n(7294),a={medium:"medium_AtL5",easy:"easy_Arst",hard:"hard_vnPO"},l=function(e){var t=e.type,n="";switch(t){case"medium":n="Medium";break;case"hard":n="Hard";break;default:n="Easy"}return r.createElement("span",{className:a[t]},n)},i=n(6529),u=function(e){var t=e.solutionType,n=e.labels,a=e.companies,u=e.url;return r.createElement(r.Fragment,null,r.createElement(l,{type:t}),r.createElement("br",null),r.createElement("br",null),r.createElement(i.Z,{labels:n}),r.createElement("br",null),a&&a.length>0&&r.createElement(r.Fragment,null,"Companies:",r.createElement(i.Z,{labels:a}),r.createElement("br",null)),"URL: ",r.createElement("a",{href:u,target:"_blank",rel:"noopener noreferrer"},u),r.createElement("br",null),r.createElement("br",null))}},8323:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return m},default:function(){return k},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return p}});var r=n(7462),a=n(3366),l=(n(7294),n(3905)),i=n(5714),u=["components"],o={title:"162. Find Peak Element (Medium)",tags:["Array","Binary Search"]},m=void 0,s={unversionedId:"162",id:"162",title:"162. Find Peak Element (Medium)",description:"<SolutionDocHead",source:"@site/solutions/162.mdx",sourceDirName:".",slug:"/162",permalink:"/leetcode/solutions/162",tags:[{label:"Array",permalink:"/leetcode/solutions/tags/array"},{label:"Binary Search",permalink:"/leetcode/solutions/tags/binary-search"}],version:"current",lastUpdatedBy:"Gaurav Bharti",lastUpdatedAt:1651077174,formattedLastUpdatedAt:"4/27/2022",frontMatter:{title:"162. Find Peak Element (Medium)",tags:["Array","Binary Search"]},sidebar:"solutions",previous:{title:"153. Find Minimum in Rotated Sorted Array (Medium)",permalink:"/leetcode/solutions/153"},next:{title:"167. Two Sum II - Input Array Is Sorted (Medium)",permalink:"/leetcode/solutions/167"}},d={},p=[],c={toc:p};function k(e){var t=e.components,n=(0,a.Z)(e,u);return(0,l.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(i.Z,{solutionType:"medium",labels:["Array","Binary Search"],url:"https://leetcode.com/problems/find-peak-element/",mdxType:"SolutionDocHead"}),(0,l.kt)("p",null,"A peak element is an element that is strictly greater than its neighbors."),(0,l.kt)("p",null,"Given an integer array ",(0,l.kt)("inlineCode",{parentName:"p"},"nums"),", find a peak element, and return its index. If the array contains multiple peaks, return the index to ",(0,l.kt)("b",null,"any of the peaks"),"."),(0,l.kt)("p",null,"You may imagine that ",(0,l.kt)("inlineCode",{parentName:"p"},"nums[-1] = nums[n] = -\u221e"),"."),(0,l.kt)("p",null,"You must write an algorithm that runs in ",(0,l.kt)("inlineCode",{parentName:"p"},"O(log n)")," time."),(0,l.kt)("b",null,"Example 1:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Input: nums = [1,2,3,1]\nOutput: 2\nExplanation: 3 is a peak element and your function should return the index number 2.\n")),(0,l.kt)("b",null,"Example 2:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Input: nums = [1,2,1,3,5,6,4]\nOutput: 5\nExplanation: Your function can return either index number 1 where the peak element is 2, or index number 5 where the peak element is 6.\n")),(0,l.kt)("b",null,"Constraints:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"1 <= nums.length <= 1000")),(0,l.kt)("li",{parentName:"ul"},"-2",(0,l.kt)("sup",null,"31")," <= nums","[i]"," <= 2",(0,l.kt)("sup",null,"31")," - 1"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"nums[i] != nums[i + 1]")," for all valid ",(0,l.kt)("inlineCode",{parentName:"li"},"i"),".")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title=solution.ts",title:"solution.ts"},"function findPeakElement(nums: number[]): number {\n  let left = 0,\n    right = nums.length - 1,\n    mid;\n  while (left < right) {\n    mid = Math.floor((right + left) / 2);\n    if (nums[mid] > nums[mid + 1]) {\n      right = mid;\n    } else {\n      left = mid + 1;\n    }\n  }\n  return left;\n}\n")))}k.isMDXComponent=!0}}]);