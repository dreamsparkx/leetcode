"use strict";(self.webpackChunkleetcode=self.webpackChunkleetcode||[]).push([[9977],{9448:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return m},default:function(){return d},frontMatter:function(){return a},metadata:function(){return u},toc:function(){return g}});var o=n(7462),i=n(3366),r=(n(7294),n(3905)),l=n(5714),s=["components"],a={title:"5. Longest Palindromic Substring (Medium)",tags:["String","Dynamic Programming","Medium","Amazon","Microsoft","Bloomberg","Uber"]},m=void 0,u={unversionedId:"5",id:"5",title:"5. Longest Palindromic Substring (Medium)",description:"<SolutionDocHead",source:"@site/solutions/5.mdx",sourceDirName:".",slug:"/5",permalink:"/leetcode/solutions/5",tags:[{label:"String",permalink:"/leetcode/solutions/tags/string"},{label:"Dynamic Programming",permalink:"/leetcode/solutions/tags/dynamic-programming"},{label:"Medium",permalink:"/leetcode/solutions/tags/medium"},{label:"Amazon",permalink:"/leetcode/solutions/tags/amazon"},{label:"Microsoft",permalink:"/leetcode/solutions/tags/microsoft"},{label:"Bloomberg",permalink:"/leetcode/solutions/tags/bloomberg"},{label:"Uber",permalink:"/leetcode/solutions/tags/uber"}],version:"current",lastUpdatedBy:"Gaurav Bharti",lastUpdatedAt:1651240850,formattedLastUpdatedAt:"4/29/2022",frontMatter:{title:"5. Longest Palindromic Substring (Medium)",tags:["String","Dynamic Programming","Medium","Amazon","Microsoft","Bloomberg","Uber"]},sidebar:"solutions",previous:{title:"4. Median of Two Sorted Arrays (Hard)",permalink:"/leetcode/solutions/4"},next:{title:"6. Zigzag Conversion (Medium)",permalink:"/leetcode/solutions/6"}},c={},g=[],p={toc:g};function d(e){var t=e.components,n=(0,i.Z)(e,s);return(0,r.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(l.Z,{solutionType:"medium",labels:["String","Dynamic Programming"],companies:["Amazon","Microsoft","Bloomberg","Uber"],url:"https://leetcode.com/problems/longest-palindromic-substring/",mdxType:"SolutionDocHead"}),(0,r.kt)("p",null,"Given a string ",(0,r.kt)("inlineCode",{parentName:"p"},"s"),", return the longest palindromic substring in ",(0,r.kt)("inlineCode",{parentName:"p"},"s"),"."),(0,r.kt)("b",null,"Example 1:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'Input: s = "babad"\nOutput: "bab"\nExplanation: "aba" is also a valid answer.\n')),(0,r.kt)("b",null,"Example 2:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'Input: s = "cbbd"\nOutput: "bb"\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title=solution.ts",title:"solution.ts"},'function longestPalindrome(s: string): string {\n  let longest: string = "";\n  for (let i = 0; i < s.length; i++) {\n    let temp = "";\n    temp = paCenterBy(s, i, i);\n    if (temp.length > longest.length) {\n      longest = temp;\n    }\n    temp = paCenterBy(s, i, i + 1);\n    if (temp.length > longest.length) {\n      longest = temp;\n    }\n  }\n  return longest;\n}\n\nfunction paCenterBy(s: string, cLeft: number, cRight: number) {\n  let result = "";\n  while (cLeft >= 0 && cRight < s.length && s[cLeft] == s[cRight]) {\n    cLeft--;\n    cRight++;\n  }\n  return s.substring(cLeft + 1, cRight);\n}\n')))}d.isMDXComponent=!0}}]);