"use strict";(self.webpackChunkleetcode=self.webpackChunkleetcode||[]).push([[8336],{5105:function(t,e,n){n.r(e),n.d(e,{assets:function(){return d},contentTitle:function(){return u},default:function(){return h},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return c}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),l=n(5714),i=["components"],s={title:"69. Sqrt(x) (Easy)",tags:["Math","Binary Search","Easy"]},u=void 0,p={unversionedId:"69",id:"69",title:"69. Sqrt(x) (Easy)",description:"<SolutionDocHead",source:"@site/solutions/69.mdx",sourceDirName:".",slug:"/69",permalink:"/leetcode/solutions/69",tags:[{label:"Math",permalink:"/leetcode/solutions/tags/math"},{label:"Binary Search",permalink:"/leetcode/solutions/tags/binary-search"},{label:"Easy",permalink:"/leetcode/solutions/tags/easy"}],version:"current",lastUpdatedBy:"Gaurav Bharti",lastUpdatedAt:1651071182,formattedLastUpdatedAt:"4/27/2022",frontMatter:{title:"69. Sqrt(x) (Easy)",tags:["Math","Binary Search","Easy"]},sidebar:"solutions",previous:{title:"53. Maximum Subarray (Easy)",permalink:"/leetcode/solutions/53"},next:{title:"104. Maximum Depth of Binary Tree (Easy)",permalink:"/leetcode/solutions/104"}},d={},c=[],m={toc:c};function h(t){var e=t.components,n=(0,r.Z)(t,i);return(0,o.kt)("wrapper",(0,a.Z)({},m,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)(l.Z,{solutionType:"easy",labels:["Math","Binary Search"],url:"https://leetcode.com/problems/sqrtx/",mdxType:"SolutionDocHead"}),(0,o.kt)("p",null,"Given a non-negative integer ",(0,o.kt)("inlineCode",{parentName:"p"},"x"),", compute and return the square root of ",(0,o.kt)("inlineCode",{parentName:"p"},"x"),"."),(0,o.kt)("p",null,"Since the return type is an integer, the decimal digits are ",(0,o.kt)("b",null,"truncated"),", and only ",(0,o.kt)("b",null,"the integer part")," of the result is returned."),(0,o.kt)("b",null,"Note:")," You are not allowed to use any built-in exponent function or operator, such as `pow(x, 0.5)` or x `** 0.5`.",(0,o.kt)("b",null,"Example 1:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Input: x = 4\nOutput: 2\n")),(0,o.kt)("b",null,"Example 2:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Input: x = 8\nOutput: 2\nExplanation: The square root of 8 is 2.82842..., and since the decimal part is truncated, 2 is returned.\n")),(0,o.kt)("b",null,"Constraints:"),(0,o.kt)("p",null,"0 <= x <= 2",(0,o.kt)("sup",null,"31")," - 1"),(0,o.kt)("b",null,"Remember that the square root of each X must happen within [1, x/2 + 1]"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title=solution.ts",title:"solution.ts"},"function mySqrt(x: number): number {\n  let left = 1,\n    right = Math.floor(x / 2) + 1;\n  let mid;\n  while (left <= right) {\n    mid = Math.floor((left + right) / 2);\n    if (mid * mid > x) {\n      right = mid - 1;\n    } else if (mid * mid < x) {\n      left = mid + 1;\n    } else {\n      return mid;\n    }\n  }\n  return right;\n}\n")))}h.isMDXComponent=!0}}]);