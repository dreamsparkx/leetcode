"use strict";(self.webpackChunkleetcode=self.webpackChunkleetcode||[]).push([[2437],{6529:function(e,t,n){var r=n(7294),a=n(1285),o=(0,n(1120).Z)((function(e){return{root:{display:"flex",flexWrap:"wrap","& > *":{margin:e.spacing(.5)}}}}));t.Z=function(e){var t=o(),n=e.labels;return r.createElement("div",{className:t.root},n.map((function(e,t){return r.createElement(a.Z,{label:e,key:t+"-"+e})})))}},5714:function(e,t,n){n.d(t,{Z:function(){return i}});var r=n(7294),a={medium:"medium_AtL5",easy:"easy_Arst",hard:"hard_vnPO"},o=function(e){var t=e.type,n="";switch(t){case"medium":n="Medium";break;case"hard":n="Hard";break;default:n="Easy"}return r.createElement("span",{className:a[t]},n)},l=n(6529),i=function(e){var t=e.solutionType,n=e.labels,a=e.companies,i=e.url;return r.createElement(r.Fragment,null,r.createElement(o,{type:t}),r.createElement("br",null),r.createElement("br",null),r.createElement(l.Z,{labels:n}),r.createElement("br",null),a&&a.length>0&&r.createElement(r.Fragment,null,"Companies:",r.createElement(l.Z,{labels:a}),r.createElement("br",null)),"URL: ",r.createElement("a",{href:i,target:"_blank",rel:"noopener noreferrer"},i),r.createElement("br",null),r.createElement("br",null))}},5408:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return u},default:function(){return g},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return p}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),l=n(5714),i=["components"],s={title:"6. Zigzag Conversion (Medium)",tags:["String"]},u=void 0,c={unversionedId:"6",id:"6",title:"6. Zigzag Conversion (Medium)",description:"<SolutionDocHead",source:"@site/solutions/6.mdx",sourceDirName:".",slug:"/6",permalink:"/leetcode/solutions/6",tags:[{label:"String",permalink:"/leetcode/solutions/tags/string"}],version:"current",lastUpdatedBy:"Gaurav Bharti",lastUpdatedAt:1650482437,formattedLastUpdatedAt:"4/21/2022",frontMatter:{title:"6. Zigzag Conversion (Medium)",tags:["String"]},sidebar:"solutions",previous:{title:"5. Longest Palindromic Substring (Medium)",permalink:"/leetcode/solutions/5"},next:{title:"11. Container With Most Water (Medium)",permalink:"/leetcode/solutions/11"}},m={},p=[],d={toc:p};function g(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(l.Z,{solutionType:"medium",labels:["String"],url:"https://leetcode.com/problems/zigzag-conversion/",mdxType:"SolutionDocHead"}),(0,o.kt)("p",null,"The string ",(0,o.kt)("inlineCode",{parentName:"p"},'"PAYPALISHIRING"')," is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"P   A   H   N\nA P L S I I G\nY   I   R\n")),(0,o.kt)("p",null,"And then read line by line: ",(0,o.kt)("inlineCode",{parentName:"p"},'"PAHNAPLSIIGYIR"')),(0,o.kt)("p",null,"Write the code that will take a string and make this conversion given a number of rows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"string convert(string s, int numRows);\n")),(0,o.kt)("b",null,"Example 1:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'Input: s = "PAYPALISHIRING", numRows = 3\nOutput: "PAHNAPLSIIGYIR"\n')),(0,o.kt)("b",null,"Example 2:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'Input: s = "PAYPALISHIRING", numRows = 4\nOutput: "PINALSIGYAHRPI"\nExplanation:\nP     I    N\nA   L S  I G\nY A   H R\nP     I\n')),(0,o.kt)("b",null,"Example 3:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'Input: s = "A", numRows = 1\nOutput: "A"\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title=solution.ts",title:"solution.ts"},'function convert(s: string, numRows: number): string {\n  const rows = [];\n  let row = 0,\n    step = 1;\n  for (let i = 0; i < s.length; i++) {\n    rows[row] = rows[row] ? rows[row] + s[i] : s[i]; // add char to current row string\n    row += step; // update row\n    if (row === numRows - 1 || row === 0) {\n      step *= -1; //  if it hit border, turn the direction\n    }\n  }\n  return rows.join("");\n}\n')))}g.isMDXComponent=!0}}]);