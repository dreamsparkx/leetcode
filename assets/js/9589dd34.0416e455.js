"use strict";(self.webpackChunkleetcode=self.webpackChunkleetcode||[]).push([[5501],{6529:function(e,t,n){var r=n(7294),l=n(1285),a=(0,n(1120).Z)((function(e){return{root:{display:"flex",flexWrap:"wrap","& > *":{margin:e.spacing(.5)}}}}));t.Z=function(e){var t=a(),n=e.labels;return r.createElement("div",{className:t.root},n.map((function(e,t){return r.createElement(l.Z,{label:e,key:t+"-"+e})})))}},5714:function(e,t,n){n.d(t,{Z:function(){return i}});var r=n(7294),l={medium:"medium_AtL5",easy:"easy_Arst",hard:"hard_vnPO"},a=function(e){var t=e.type,n="";switch(t){case"medium":n="Medium";break;case"hard":n="Hard";break;default:n="Easy"}return r.createElement("span",{className:l[t]},n)},s=n(6529),i=function(e){var t=e.solutionType,n=e.labels,l=e.companies,i=e.url;return r.createElement(r.Fragment,null,r.createElement(a,{type:t}),r.createElement("br",null),r.createElement("br",null),r.createElement(s.Z,{labels:n}),r.createElement("br",null),l&&l.length>0&&r.createElement(r.Fragment,null,"Companies:",r.createElement(s.Z,{labels:l}),r.createElement("br",null)),"URL: ",r.createElement("a",{href:i,target:"_blank",rel:"noopener noreferrer"},i),r.createElement("br",null),r.createElement("br",null))}},9880:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return b},frontMatter:function(){return d},metadata:function(){return m},toc:function(){return k}});var r=n(7462),l=n(3366),a=(n(7294),n(3905)),s=n.p+"assets/images/image1-d4175b5b57511707bc91aa59fe3e1620.png",i=n.p+"assets/images/image2-85ef13754ef075724020efca299bc09c.png",o=n(5714),u=["components"],d={title:"206. Reverse Linked List (Easy)",tags:["Linked List","Recursion"]},c=void 0,m={unversionedId:"206",id:"206",title:"206. Reverse Linked List (Easy)",description:"<SolutionDocHead",source:"@site/solutions/206.mdx",sourceDirName:".",slug:"/206",permalink:"/leetcode/solutions/206",tags:[{label:"Linked List",permalink:"/leetcode/solutions/tags/linked-list"},{label:"Recursion",permalink:"/leetcode/solutions/tags/recursion"}],version:"current",lastUpdatedBy:"Gaurav Bharti",lastUpdatedAt:1650485894,formattedLastUpdatedAt:"4/21/2022",frontMatter:{title:"206. Reverse Linked List (Easy)",tags:["Linked List","Recursion"]},sidebar:"solutions",previous:{title:"202. Happy Number (Easy)",permalink:"/leetcode/solutions/202"},next:{title:"344. Reverse String (Easy)",permalink:"/leetcode/solutions/344"}},p={},k=[],f={toc:k};function b(e){var t=e.components,n=(0,l.Z)(e,u);return(0,a.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)(o.Z,{solutionType:"easy",labels:["Linked List","Recursion"],url:"https://leetcode.com/problems/reverse-linked-list/",mdxType:"SolutionDocHead"}),(0,a.kt)("p",null,"Given the ",(0,a.kt)("inlineCode",{parentName:"p"},"head")," of a singly linked list, reverse the list, and return the reversed list."),(0,a.kt)("b",null,"Example 1:"),(0,a.kt)("br",null),(0,a.kt)("img",{src:s,width:"483",height:"342"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Input: head = [1,2,3,4,5]\nOutput: [5,4,3,2,1]\n")),(0,a.kt)("b",null,"Example 2:"),(0,a.kt)("br",null),(0,a.kt)("img",{src:i,width:"483",height:"342"}),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Input: head = [1,2]\nOutput: [2,1]\n")),(0,a.kt)("b",null,"Example 3:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Input: head = []\nOutput: []\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title=solution.ts",title:"solution.ts"},"class ListNode {\n  val: number;\n  next: ListNode | null;\n  constructor(val?: number, next?: ListNode | null) {\n    this.val = val === undefined ? 0 : val;\n    this.next = next === undefined ? null : next;\n  }\n}\n\nfunction reverseList(head: ListNode | null): ListNode | null {\n  let fakeHead = new ListNode();\n  reverse(head, fakeHead);\n  return fakeHead.next;\n}\n\nfunction reverse(node: ListNode, fakeHead: ListNode) {\n  if (node === null) {\n    return fakeHead;\n  }\n  let tail: ListNode = reverse(node.next, fakeHead);\n  tail.next = node;\n  node.next = null;\n  return node;\n}\n")))}b.isMDXComponent=!0}}]);