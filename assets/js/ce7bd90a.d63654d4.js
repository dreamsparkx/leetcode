"use strict";(self.webpackChunkleetcode=self.webpackChunkleetcode||[]).push([[2945],{1964:function(n,e,t){t.r(e),t.d(e,{assets:function(){return m},contentTitle:function(){return u},default:function(){return g},frontMatter:function(){return r},metadata:function(){return c},toc:function(){return d}});var i=t(7462),l=t(3366),a=(t(7294),t(3905)),o=t(5714),s=["components"],r={title:"647. Palindromic Substrings (Medium)",tags:["String","Dynamic Programming","Medium","Facebook","LinkedIn"]},u=void 0,c={unversionedId:"647",id:"647",title:"647. Palindromic Substrings (Medium)",description:"<SolutionDocHead",source:"@site/solutions/647.mdx",sourceDirName:".",slug:"/647",permalink:"/leetcode/solutions/647",tags:[{label:"String",permalink:"/leetcode/solutions/tags/string"},{label:"Dynamic Programming",permalink:"/leetcode/solutions/tags/dynamic-programming"},{label:"Medium",permalink:"/leetcode/solutions/tags/medium"},{label:"Facebook",permalink:"/leetcode/solutions/tags/facebook"},{label:"LinkedIn",permalink:"/leetcode/solutions/tags/linked-in"}],version:"current",lastUpdatedBy:"Gaurav Bharti",lastUpdatedAt:1651501637,formattedLastUpdatedAt:"5/2/2022",frontMatter:{title:"647. Palindromic Substrings (Medium)",tags:["String","Dynamic Programming","Medium","Facebook","LinkedIn"]},sidebar:"solutions",previous:{title:"621. Task Scheduler (Medium)",permalink:"/leetcode/solutions/621"},next:{title:"658. Find K Closest Elements (Medium)",permalink:"/leetcode/solutions/658"}},m={},d=[],p={toc:d};function g(n){var e=n.components,t=(0,l.Z)(n,s);return(0,a.kt)("wrapper",(0,i.Z)({},p,t,{components:e,mdxType:"MDXLayout"}),(0,a.kt)(o.Z,{solutionType:"medium",labels:["Array","Dynamic Programming"],url:"https://leetcode.com/problems/palindromic-substrings/",mdxType:"SolutionDocHead"}),(0,a.kt)("p",null,"Given a string ",(0,a.kt)("inlineCode",{parentName:"p"},"s"),", return the number of ",(0,a.kt)("b",null,"palindromic substrings")," in it."),(0,a.kt)("p",null,"A string is a ",(0,a.kt)("b",null,"palindrome")," when it reads the same backward as forward."),(0,a.kt)("p",null,"A ",(0,a.kt)("b",null,"substring")," is a contiguous sequence of characters within the string."),(0,a.kt)("b",null,"Example 1:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'Input: s = "abc"\nOutput: 3\nExplanation: Three palindromic strings: "a", "b", "c".\n')),(0,a.kt)("b",null,"Example 2:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'Input: s = "aaa"\nOutput: 6\nExplanation: Six palindromic strings: "a", "a", "a", "aa", "aa", "aaa".\n')),(0,a.kt)("b",null,"Constraints:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"1 <= s.length <= 1000"),(0,a.kt)("li",{parentName:"ul"},"s consists of lowercase English letters.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:"solution.ts","solution.ts":!0},"function countSubstrings(s: string): number {\n  let count = 0;\n  for (let i = 0; i < s.length; i += 1) {\n    helper(s, i, i); //found all single number length Palindromic\n    helper(s, i, i + 1); //found all even number length Palindromic\n  }\n  return count;\n\n  function helper(s, low, high) {\n    while (low >= 0 && high <= s.length && s[low] === s[high]) {\n      count += 1;\n      low -= 1;\n      high += 1;\n    }\n  }\n}\n")))}g.isMDXComponent=!0}}]);