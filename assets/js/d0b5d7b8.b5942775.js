"use strict";(self.webpackChunkleetcode=self.webpackChunkleetcode||[]).push([[8992],{6529:function(e,t,n){var l=n(7294),a=n(1285),r=(0,n(1120).Z)((function(e){return{root:{display:"flex",flexWrap:"wrap","& > *":{margin:e.spacing(.5)}}}}));t.Z=function(e){var t=r(),n=e.labels;return l.createElement("div",{className:t.root},n.map((function(e,t){return l.createElement(a.Z,{label:e,key:t+"-"+e})})))}},5714:function(e,t,n){n.d(t,{Z:function(){return i}});var l=n(7294),a={medium:"medium_AtL5",easy:"easy_Arst",hard:"hard_vnPO"},r=function(e){var t=e.type,n="";switch(t){case"medium":n="Medium";break;case"hard":n="Hard";break;default:n="Easy"}return l.createElement("span",{className:a[t]},n)},u=n(6529),i=function(e){var t=e.solutionType,n=e.labels,a=e.companies,i=e.url;return l.createElement(l.Fragment,null,l.createElement(r,{type:t}),l.createElement("br",null),l.createElement("br",null),l.createElement(u.Z,{labels:n}),l.createElement("br",null),a&&a.length>0&&l.createElement(l.Fragment,null,"Companies:",l.createElement(u.Z,{labels:a}),l.createElement("br",null)),"URL: ",l.createElement("a",{href:i,target:"_blank",rel:"noopener noreferrer"},i),l.createElement("br",null),l.createElement("br",null))}},8490:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return o},default:function(){return b},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return c}});var l=n(7462),a=n(3366),r=(n(7294),n(3905)),u=n(5714),i=["components"],s={title:"202. Happy Number (Easy)",tags:["Hash Table","Math","Two Pointers"]},o=void 0,p={unversionedId:"202",id:"202",title:"202. Happy Number (Easy)",description:"<SolutionDocHead",source:"@site/solutions/202.mdx",sourceDirName:".",slug:"/202",permalink:"/leetcode/solutions/202",tags:[{label:"Hash Table",permalink:"/leetcode/solutions/tags/hash-table"},{label:"Math",permalink:"/leetcode/solutions/tags/math"},{label:"Two Pointers",permalink:"/leetcode/solutions/tags/two-pointers"}],version:"current",lastUpdatedBy:"Gaurav Bharti",lastUpdatedAt:1650914364,formattedLastUpdatedAt:"4/26/2022",frontMatter:{title:"202. Happy Number (Easy)",tags:["Hash Table","Math","Two Pointers"]},sidebar:"solutions",previous:{title:"189. Rotate Array (Medium)",permalink:"/leetcode/solutions/189"},next:{title:"206. Reverse Linked List (Easy)",permalink:"/leetcode/solutions/206"}},m={},c=[],d={toc:c};function b(e){var t=e.components,n=(0,a.Z)(e,i);return(0,r.kt)("wrapper",(0,l.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)(u.Z,{solutionType:"easy",labels:["Hash Table","Math","Two Pointers"],companies:["Uber","Twitter","Airbnb"],url:"https://leetcode.com/problems/happy-number/",mdxType:"SolutionDocHead"}),(0,r.kt)("p",null,"Write an algorithm to determine if a number ",(0,r.kt)("inlineCode",{parentName:"p"},"n")," is happy."),(0,r.kt)("p",null,"A ",(0,r.kt)("b",null,"happy number")," is a number defined by the following process:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Starting with any positive integer, replace the number by the sum of the squares of its digits."),(0,r.kt)("li",{parentName:"ul"},"Repeat the process until the number equals 1 (where it will stay), or it ",(0,r.kt)("b",null,"loops endlessly in a cycle")," which does not include 1."),(0,r.kt)("li",{parentName:"ul"},"Those numbers for which this process ",(0,r.kt)("b",null,"ends in 1")," are happy.")),(0,r.kt)("p",null,"Return ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," if ",(0,r.kt)("inlineCode",{parentName:"p"},"n")," is a happy number, and ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," if not."),(0,r.kt)("b",null,"Example 1:"),(0,r.kt)("br",null),(0,r.kt)("code",null,"Input: n = 19",(0,r.kt)("p",null,"Output: true\nExplanation:\n1",(0,r.kt)("sup",null,"2")," + 9",(0,r.kt)("sup",null,"2")," = 82\n8",(0,r.kt)("sup",null,"2")," + 2",(0,r.kt)("sup",null,"2")," = 68\n6",(0,r.kt)("sup",null,"2")," + 8",(0,r.kt)("sup",null,"2")," = 100\n1",(0,r.kt)("sup",null,"2")," + 0",(0,r.kt)("sup",null,"2")," + 0",(0,r.kt)("sup",null,"2")," = 1")),(0,r.kt)("b",null,"Example 2:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Input: n = 2\nOutput: false\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title=solution.ts",title:"solution.ts"},"function getDigits(num) {\n  const digits = [];\n  while (num > 0) {\n    digits.push(num % 10);\n    num = Math.floor(num / 10);\n  }\n  return digits;\n}\n\nfunction getSquaredTotal(digits: number[]) {\n  return digits.reduce((total, digit) => total + digit * digit, 0);\n}\n\nfunction isHappy(n: number): boolean {\n  const seen = new Set();\n  while (n !== 1) {\n    let digits = getDigits(n);\n    n = getSquaredTotal(digits);\n    if (seen.has(n)) {\n      return false;\n    }\n    seen.add(n);\n  }\n  return true;\n}\n")))}b.isMDXComponent=!0}}]);