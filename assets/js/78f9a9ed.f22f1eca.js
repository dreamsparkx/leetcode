"use strict";(self.webpackChunkleetcode=self.webpackChunkleetcode||[]).push([[5676],{6529:function(e,t,n){var r=n(7294),a=n(1285),l=(0,n(1120).Z)((function(e){return{root:{display:"flex",flexWrap:"wrap","& > *":{margin:e.spacing(.5)}}}}));t.Z=function(e){var t=l(),n=e.labels;return r.createElement("div",{className:t.root},n.map((function(e,t){return r.createElement(a.Z,{label:e,key:t+"-"+e})})))}},5714:function(e,t,n){n.d(t,{Z:function(){return s}});var r=n(7294),a={medium:"medium_AtL5",easy:"easy_Arst",hard:"hard_vnPO"},l=function(e){var t=e.type,n="";switch(t){case"medium":n="Medium";break;case"hard":n="Hard";break;default:n="Easy"}return r.createElement("span",{className:a[t]},n)},o=n(6529),s=function(e){var t=e.solutionType,n=e.labels,a=e.companies,s=e.url;return r.createElement(r.Fragment,null,r.createElement(l,{type:t}),r.createElement("br",null),r.createElement("br",null),r.createElement(o.Z,{labels:n}),r.createElement("br",null),a&&a.length>0&&r.createElement(r.Fragment,null,"Companies:",r.createElement(o.Z,{labels:a}),r.createElement("br",null)),"URL: ",r.createElement("a",{href:s,target:"_blank",rel:"noopener noreferrer"},s),r.createElement("br",null),r.createElement("br",null))}},6427:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return u},default:function(){return f},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return d}});var r=n(7462),a=n(3366),l=(n(7294),n(3905)),o=n(5714),s=["components"],i={title:"35. Search Insert Position (Easy)",tags:["Array","Binary Search","Easy"]},u=void 0,c={unversionedId:"35",id:"35",title:"35. Search Insert Position (Easy)",description:"<SolutionDocHead",source:"@site/solutions/35.mdx",sourceDirName:".",slug:"/35",permalink:"/leetcode/solutions/35",tags:[{label:"Array",permalink:"/leetcode/solutions/tags/array"},{label:"Binary Search",permalink:"/leetcode/solutions/tags/binary-search"},{label:"Easy",permalink:"/leetcode/solutions/tags/easy"}],version:"current",lastUpdatedBy:"Gaurav Bharti",lastUpdatedAt:1650915156,formattedLastUpdatedAt:"4/26/2022",frontMatter:{title:"35. Search Insert Position (Easy)",tags:["Array","Binary Search","Easy"]},sidebar:"solutions",previous:{title:"32. Longest Valid Parentheses (Hard)",permalink:"/leetcode/solutions/32"},next:{title:"37. Sudoku Solver (Hard)",permalink:"/leetcode/solutions/37"}},m={},d=[],p={toc:d};function f(e){var t=e.components,n=(0,a.Z)(e,s);return(0,l.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(o.Z,{solutionType:"easy",labels:["Array","Binary Search"],url:"https://leetcode.com/problems/search-insert-position/",mdxType:"SolutionDocHead"}),(0,l.kt)("p",null,"Given a sorted array of distinct integers and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order."),(0,l.kt)("p",null,"You must write an algorithm with ",(0,l.kt)("inlineCode",{parentName:"p"},"O(log n)")," runtime complexity."),(0,l.kt)("b",null,"Example 1:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Input: nums = [1,3,5,6], target = 5\nOutput: 2\n")),(0,l.kt)("b",null,"Example 2:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Input: nums = [1,3,5,6], target = 2\nOutput: 1\n")),(0,l.kt)("b",null,"Example 3:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Input: nums = [1,3,5,6], target = 7\nOutput: 4\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title=solution.ts",title:"solution.ts"},"function searchInsert(nums: number[], target: number): number {\n  // binary search\n  let l: number = 0;\n  let r: number = nums.length - 1;\n  let mid: number;\n  while (r >= l) {\n    mid = l + Math.floor((r - l) / 2);\n    if (nums[mid] === target) {\n      return mid;\n    }\n    if (nums[mid] > target) {\n      r = mid - 1;\n    } else {\n      l = mid + 1;\n    }\n  }\n  return l;\n}\n")))}f.isMDXComponent=!0}}]);