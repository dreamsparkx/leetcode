"use strict";(self.webpackChunkleetcode=self.webpackChunkleetcode||[]).push([[7784],{6529:function(e,t,n){var a=n(7294),r=n(1285),l=(0,n(1120).Z)((function(e){return{root:{display:"flex",flexWrap:"wrap","& > *":{margin:e.spacing(.5)}}}}));t.Z=function(e){var t=l(),n=e.labels;return a.createElement("div",{className:t.root},n.map((function(e,t){return a.createElement(r.Z,{label:e,key:t+"-"+e})})))}},5714:function(e,t,n){n.d(t,{Z:function(){return s}});var a=n(7294),r={medium:"medium_AtL5",easy:"easy_Arst",hard:"hard_vnPO"},l=function(e){var t=e.type,n="";switch(t){case"medium":n="Medium";break;case"hard":n="Hard";break;default:n="Easy"}return a.createElement("span",{className:r[t]},n)},u=n(6529),s=function(e){var t=e.solutionType,n=e.labels,r=e.companies,s=e.url;return a.createElement(a.Fragment,null,a.createElement(l,{type:t}),a.createElement("br",null),a.createElement("br",null),a.createElement(u.Z,{labels:n}),a.createElement("br",null),r&&r.length>0&&a.createElement(a.Fragment,null,"Companies:",a.createElement(u.Z,{labels:r}),a.createElement("br",null)),"URL: ",a.createElement("a",{href:s,target:"_blank",rel:"noopener noreferrer"},s),a.createElement("br",null),a.createElement("br",null))}},2098:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return m},default:function(){return k},frontMatter:function(){return o},metadata:function(){return i},toc:function(){return p}});var a=n(7462),r=n(3366),l=(n(7294),n(3905)),u=n(5714),s=["components"],o={title:"560. Subarray Sum Equals K (Medium)",tags:["Array","Hash Table","Prefix Sum","Medium"]},m=void 0,i={unversionedId:"560",id:"560",title:"560. Subarray Sum Equals K (Medium)",description:"<SolutionDocHead",source:"@site/solutions/560.mdx",sourceDirName:".",slug:"/560",permalink:"/leetcode/solutions/560",tags:[{label:"Array",permalink:"/leetcode/solutions/tags/array"},{label:"Hash Table",permalink:"/leetcode/solutions/tags/hash-table"},{label:"Prefix Sum",permalink:"/leetcode/solutions/tags/prefix-sum"},{label:"Medium",permalink:"/leetcode/solutions/tags/medium"}],version:"current",lastUpdatedBy:"Gaurav Bharti",lastUpdatedAt:1650982978,formattedLastUpdatedAt:"4/26/2022",frontMatter:{title:"560. Subarray Sum Equals K (Medium)",tags:["Array","Hash Table","Prefix Sum","Medium"]},sidebar:"solutions",previous:{title:"535. Encode and Decode TinyURL (Medium)",permalink:"/leetcode/solutions/535"},next:{title:"739. Daily Temperatures (Medium)",permalink:"/leetcode/solutions/739"}},c={},p=[],d={toc:p};function k(e){var t=e.components,n=(0,r.Z)(e,s);return(0,l.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(u.Z,{solutionType:"medium",labels:["Array","Hash Table","Prefix Sum"],companies:["Facebook","Google"],url:"https://leetcode.com/problems/subarray-sum-equals-k/",mdxType:"SolutionDocHead"}),(0,l.kt)("p",null,"Given an array of integers ",(0,l.kt)("inlineCode",{parentName:"p"},"nums")," and an integer ",(0,l.kt)("inlineCode",{parentName:"p"},"k"),", return the total number of subarrays whose sum equals to ",(0,l.kt)("inlineCode",{parentName:"p"},"k"),"."),(0,l.kt)("b",null,"Example 1:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Input: nums = [1,1,1], k = 2\nOutput: 2\n")),(0,l.kt)("b",null,"Example 2:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Input: nums = [1,2,3], k = 3\nOutput: 2\n")),(0,l.kt)("b",null,"Constraints:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"1 <= nums.length <= 2 ","*"," 10",(0,l.kt)("sup",null,"4")),(0,l.kt)("li",{parentName:"ul"},"-1000 <= nums","[i]"," <= 1000"),(0,l.kt)("li",{parentName:"ul"},"-10",(0,l.kt)("sup",null,"7")," <= k <= 10",(0,l.kt)("sup",null,"7"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title=solution.ts",title:"solution.ts"},"function subarraySum(nums: number[], k: number): number {\n  const map = new Map();\n  let sum = 0;\n  let count = 0;\n  map.set(0, 1);\n  for (let i = 0; i < nums.length; i++) {\n    sum = sum + nums[i];\n    if (map.has(sum - k)) {\n      count = count + map.get(sum - k);\n    }\n    if (map.has(sum)) {\n      map.set(sum, map.get(sum) + 1);\n    } else {\n      map.set(sum, 1);\n    }\n  }\n  return count;\n}\n")))}k.isMDXComponent=!0}}]);