"use strict";(self.webpackChunkleetcode=self.webpackChunkleetcode||[]).push([[5779],{9445:function(t,n,e){e.r(n),e.d(n,{assets:function(){return m},contentTitle:function(){return u},default:function(){return h},frontMatter:function(){return s},metadata:function(){return d},toc:function(){return p}});var i=e(7462),r=e(3366),a=(e(7294),e(3905)),l=e(5714),o=["components"],s={title:"34. Find First and Last Position of Element in Sorted Array (Medium)",tags:["Array","Binary Search","Medium"]},u=void 0,d={unversionedId:"34",id:"34",title:"34. Find First and Last Position of Element in Sorted Array (Medium)",description:"<SolutionDocHead",source:"@site/solutions/34.mdx",sourceDirName:".",slug:"/34",permalink:"/leetcode/solutions/34",tags:[{label:"Array",permalink:"/leetcode/solutions/tags/array"},{label:"Binary Search",permalink:"/leetcode/solutions/tags/binary-search"},{label:"Medium",permalink:"/leetcode/solutions/tags/medium"}],version:"current",lastUpdatedBy:"Gaurav Bharti",lastUpdatedAt:1651079303,formattedLastUpdatedAt:"4/27/2022",frontMatter:{title:"34. Find First and Last Position of Element in Sorted Array (Medium)",tags:["Array","Binary Search","Medium"]},sidebar:"solutions",previous:{title:"33. Search in Rotated Sorted Array (Medium)",permalink:"/leetcode/solutions/33"},next:{title:"35. Search Insert Position (Easy)",permalink:"/leetcode/solutions/35"}},m={},p=[],c={toc:p};function h(t){var n=t.components,e=(0,r.Z)(t,o);return(0,a.kt)("wrapper",(0,i.Z)({},c,e,{components:n,mdxType:"MDXLayout"}),(0,a.kt)(l.Z,{solutionType:"medium",labels:["Array","Binary Search"],companies:["LinkedIn"],url:"https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/",mdxType:"SolutionDocHead"}),(0,a.kt)("p",null,"Given an array of integers ",(0,a.kt)("inlineCode",{parentName:"p"},"nums")," sorted in non-decreasing order, find the starting and ending position of a given ",(0,a.kt)("inlineCode",{parentName:"p"},"target")," value."),(0,a.kt)("p",null,"If ",(0,a.kt)("inlineCode",{parentName:"p"},"target")," is not found in the array, return ",(0,a.kt)("inlineCode",{parentName:"p"},"[-1, -1]"),"."),(0,a.kt)("p",null,"You must write an algorithm with ",(0,a.kt)("inlineCode",{parentName:"p"},"O(log n)")," runtime complexity."),(0,a.kt)("b",null,"Example 1:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Input: nums = [5,7,7,8,8,10], target = 8\nOutput: [3,4]\n")),(0,a.kt)("b",null,"Example 2:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Input: nums = [5,7,7,8,8,10], target = 6\nOutput: [-1,-1]\n")),(0,a.kt)("b",null,"Example 3:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Input: nums = [], target = 0\nOutput: [-1,-1]\n")),(0,a.kt)("b",null,"Constraints:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"0 <= nums.length <= 10",(0,a.kt)("sup",null,"5")),(0,a.kt)("li",{parentName:"ul"},"-10",(0,a.kt)("sup",null,"9")," <= nums","[i]"," <= 10",(0,a.kt)("sup",null,"9")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"nums")," is a non-decreasing array."),(0,a.kt)("li",{parentName:"ul"},"-10",(0,a.kt)("sup",null,"9")," <= target <= 10",(0,a.kt)("sup",null,"9"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts",metastring:"title=solution.ts",title:"solution.ts"},"function searchRange(nums: number[], target: number): number[] {\n  let low = 0,\n    high = nums.length - 1,\n    mid;\n  // find the start\n  while (low <= high) {\n    mid = Math.floor((low + high) / 2);\n    if (nums[mid] >= target) {\n      high = mid - 1;\n    } else {\n      low = mid + 1;\n    }\n  }\n  // if target don't exist\n  if (nums[low] != target) {\n    return [-1, -1];\n  }\n\n  const start = low;\n  // reset\n  (low = 0), (high = nums.length - 1);\n\n  // find the end\n  while (low <= high) {\n    mid = Math.floor((low + high) / 2);\n    if (nums[mid] <= target) {\n      low = mid + 1;\n    } else {\n      high = mid - 1;\n    }\n  }\n  return [start, high];\n}\n")))}h.isMDXComponent=!0}}]);